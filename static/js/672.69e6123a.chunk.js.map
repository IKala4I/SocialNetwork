{"version":3,"file":"static/js/672.69e6123a.chunk.js","mappings":"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","sources":["components/ProfileContainer/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","components/ProfileContainer/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-app/./src/components/ProfileContainer/Profile/MyPostsContainer/MyPosts/Post/Post.module.css?b5e2","components/ProfileContainer/Profile/MyPostsContainer/MyPosts/Post/Post.jsx","components/ProfileContainer/Profile/MyPostsContainer/MyPosts/MyPosts.jsx","redux/selectors/profile-selectors.js","components/ProfileContainer/Profile/MyPostsContainer/MyPostsContainer.jsx","components/ProfileContainer/Profile/Profile.jsx","withRouter.js","components/ProfileContainer/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\r\n\r\nfunction ProfileStatus(props) {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status)\r\n            setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ?\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n                :\r\n                <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {status || '-----'}\r\n                        </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","import userDefaultPhoto from '../../../../assets/images/user.png'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\";\r\n\r\nfunction ProfileInfo({profile, status, updateStatus}) {\r\n    if (!profile)\r\n        return <></>\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <img\r\n                    src='https://e1.pxfuel.com/desktop-wallpaper/197/736/desktop-wallpaper-hot-girls-ultra-wide-women.jpg'\r\n                    alt='content img'/>\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <img src={profile.photos.large ? profile.photos.large : userDefaultPhoto} alt='ava'/>\r\n                </div>\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__7eztW\"};","import classes from './Post.module.css'\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://www.shutterstock.com/image-photo/young-beautiful-girl-driving-car-260nw-1154053897.jpg'\r\n                alt='post img'\r\n            />\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength, required} from \"../../../../../utils/validators\";\r\nimport {Textarea} from \"../../../../common/FormControls/FormControls\";\r\n\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    const postComponents = posts.map(post => <Post id={post.id} message={post.message}\r\n                                                         likeCount={post.likesCount}/>);\r\n\r\n    const onAddPost = (formData) => {\r\n        addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <NewPostForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postComponents}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nlet NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='newPostText' component={Textarea} validate={[required, maxLength20]}/>\r\n            <button type='submit'>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nNewPostForm = reduxForm({form: 'NewPostForm'})(NewPostForm)\r\n\r\nexport default MyPosts;","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts\r\n}\r\nexport const getIsProfileFetching = (state) => {\r\n    return state.profilePage.isProfileFetching\r\n}\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.status\r\n}","import MyPosts from \"./MyPosts/MyPosts\";\nimport {addPost} from \"../../../../redux/reducers/profile-reducer/profile-reducer\";\nimport {connect} from \"react-redux\";\nimport {getPosts} from \"../../../../redux/selectors/profile-selectors\";\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: getPosts(state)\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPost\n})(MyPosts)\nexport default MyPostsContainer;","import ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPostsContainer/MyPostsContainer\";\r\n\r\nfunction Profile({profile, status, updateStatus}) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={profile} status={status} updateStatus={updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\"\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default withRouter","import {Component} from \"react\";\r\nimport Profile from \"./Profile/Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getStatus,\r\n    getUserProfile,\r\n    updateStatus\r\n} from \"../../redux/reducers/profile-reducer/profile-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport withRouter from \"../../withRouter\";\r\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\";\r\nimport {compose} from \"redux\";\r\nimport {getIsProfileFetching, getProfile, getProfileStatus} from \"../../redux/selectors/profile-selectors\";\r\nimport {getUserId} from \"../../redux/selectors/auth-selectors\";\r\n\r\nclass ProfileContainer extends Component {\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userID\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isProfileFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <Profile profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isProfileFetching: getIsProfileFetching(state),\r\n        status: getProfileStatus(state),\r\n        authorizedUserId: getUserId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthNavigate,\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)","import {Component} from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthNavigate(MyComponent) {\r\n     class AuthenticatedComponent extends Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Navigate to=\"/login\"/>\r\n\r\n            return (\r\n                <MyComponent {...this.props} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticatedComponent)\r\n}\r\n\r\nexport default withAuthNavigate\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","_ref","profile","_jsxs","_Fragment","src","alt","photos","large","userDefaultPhoto","ProfileStatus","className","classes","message","likeCount","maxLength20","maxLength","NewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","validate","required","type","reduxForm","form","posts","addPost","postComponents","map","post","Post","id","likesCount","formData","newPostText","getProfile","state","profilePage","getPosts","getIsProfileFetching","isProfileFetching","getProfileStatus","connect","MyPosts","ProfileInfo","MyPostsContainer","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","ProfileContainer","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","userId","this","userID","authorizedUserId","getUserProfile","getStatus","Preloader","Profile","compose","withAuthNavigate","getUserId","withRouter","mapStateToProps","isAuth","auth","MyComponent","AuthenticatedComponent","Navigate","to"],"sourceRoot":""}
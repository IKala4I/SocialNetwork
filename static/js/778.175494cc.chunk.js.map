{"version":3,"file":"static/js/778.175494cc.chunk.js","mappings":"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","sources":["components/ProfileContainer/Profile/ProfileInfo/ProfileStatus/ProfileStatus.jsx","webpack://react-app/./src/components/ProfileContainer/Profile/ProfileInfo/ProfileInfo.module.css?daa0","components/ProfileContainer/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-app/./src/components/ProfileContainer/Profile/MyPostsContainer/MyPosts/Post/Post.module.css?b5e2","components/ProfileContainer/Profile/MyPostsContainer/MyPosts/Post/Post.jsx","components/ProfileContainer/Profile/MyPostsContainer/MyPosts/MyPosts.jsx","redux/selectors/profile-selectors.js","components/ProfileContainer/Profile/MyPostsContainer/MyPostsContainer.jsx","components/ProfileContainer/Profile/Profile.jsx","withRouter.js","components/ProfileContainer/ProfileContainer.jsx","hoc/withAuthNavigate.js"],"sourcesContent":["import {useEffect, useState} from \"react\"\r\n\r\nfunction ProfileStatus(props) {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        if (status !== props.status)\r\n            setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {editMode\r\n                ?\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus onBlur={deactivateEditMode}\r\n                           value={status}\r\n                    />\r\n                </div>\r\n                :\r\n                <div>\r\n                        <span onDoubleClick={activateEditMode}>\r\n                            {status || '-----'}\r\n                        </span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__y4AVQ\",\"mainPhoto\":\"ProfileInfo_mainPhoto__8eb0Y\",\"contact\":\"ProfileInfo_contact__kDplO\"};","import userDefaultPhoto from '../../../../assets/images/user.png'\r\nimport ProfileStatus from \"./ProfileStatus/ProfileStatus\"\r\nimport {useState} from \"react\"\r\nimport classes from './ProfileInfo.module.css'\r\nimport {createField, Input, Textarea} from \"../../../common/FormControls/FormControls\"\r\nimport {reduxForm} from \"redux-form\"\r\nimport formControlsClasses from '../../../common/FormControls/FormControls.module.css'\r\n\r\nfunction ProfileInfo({profile, status, updateStatus, savePhoto, isOwner, saveProfile}) {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!profile)\r\n        return <></>\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false)\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <img\r\n                    src='https://e1.pxfuel.com/desktop-wallpaper/197/736/desktop-wallpaper-hot-girls-ultra-wide-women.jpg'\r\n                    alt='content img'/>\r\n            </div>\r\n            <div>\r\n                <img src={profile.photos.large || userDefaultPhoto} className={classes.mainPhoto} alt='avatar'/>\r\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\r\n\r\n                { editMode\r\n                    ? <ProfileDataFormReduxForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n                    : <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n                <ProfileStatus status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n        <div>\r\n            <b>Full name</b>: {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n            </div>\r\n        }\r\n\r\n        <div>\r\n            <b>About me</b>: {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n    return <form onSubmit={handleSubmit}>\r\n        <div><button>save</button></div>\r\n        {error && <div className={formControlsClasses.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n        <div>\r\n            <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job</b>: { createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n        </div>\r\n\r\n        <div>\r\n            <b>My professional skills</b>:\r\n            { createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea  )}\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <b>About me</b>:\r\n            { createField(\"About me\", \"aboutMe\", [], Textarea  )}\r\n        </div>\r\n        <div>\r\n            <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n                <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n        })}\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileInfo","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__7eztW\"};","import classes from './Post.module.css'\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div className={classes.item}>\r\n            <img\r\n                src='https://www.shutterstock.com/image-photo/young-beautiful-girl-driving-car-260nw-1154053897.jpg'\r\n                alt='post img'\r\n            />\r\n            {props.message}\r\n            <div>\r\n                <span>Like {props.likeCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post","import Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\"\r\nimport {maxLength, required} from \"../../../../../utils/validators\"\r\nimport {Textarea} from \"../../../../common/FormControls/FormControls\"\r\n\r\nconst maxLength20 = maxLength(20)\r\n\r\nconst MyPosts = ({posts, addPost}) => {\r\n    const postComponents = posts.map(post => <Post id={post.id} message={post.message}\r\n                                                         likeCount={post.likesCount}/>)\r\n\r\n    const onAddPost = (formData) => {\r\n        addPost(formData.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <NewPostForm onSubmit={onAddPost}/>\r\n            <div>\r\n                {postComponents}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='newPostText' component={Textarea} validate={[required, maxLength20]}/>\r\n            <button type='submit'>Add post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nNewPostForm = reduxForm({form: 'NewPostForm'})(NewPostForm)\r\n\r\nexport default MyPosts","export const getProfile = (state) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getPosts = (state) => {\r\n    return state.profilePage.posts\r\n}\r\nexport const getIsProfileFetching = (state) => {\r\n    return state.profilePage.isProfileFetching\r\n}\r\nexport const getProfileStatus = (state) => {\r\n    return state.profilePage.status\r\n}","import MyPosts from \"./MyPosts/MyPosts\"\nimport {addPost} from \"../../../../redux/reducers/profile-reducer/profile-reducer\"\nimport {connect} from \"react-redux\"\nimport {getPosts} from \"../../../../redux/selectors/profile-selectors\"\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: getPosts(state)\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, {\n    addPost\n})(MyPosts)\nexport default MyPostsContainer","import ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nimport MyPostsContainer from \"./MyPostsContainer/MyPostsContainer\"\r\nfunction Profile({profile, status, updateStatus, savePhoto, isOwner, saveProfile}) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={profile}\r\n                status={status}\r\n                updateStatus={updateStatus}\r\n                savePhoto={savePhoto}\r\n                isOwner={isOwner}\r\n                saveProfile={saveProfile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import {\r\n    useLocation,\r\n    useNavigate,\r\n    useParams,\r\n} from \"react-router-dom\"\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation()\r\n        let navigate = useNavigate()\r\n        let params = useParams()\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return ComponentWithRouterProp\r\n}\r\n\r\nexport default withRouter","import {Component} from \"react\"\r\nimport Profile from \"./Profile/Profile\"\r\nimport {connect} from \"react-redux\"\r\nimport {\r\n    getStatus,\r\n    getUserProfile, savePhoto, saveProfile,\r\n    updateStatus\r\n} from \"../../redux/reducers/profile-reducer/profile-reducer\"\r\nimport Preloader from \"../common/Preloader/Preloader\"\r\nimport withRouter from \"../../withRouter\"\r\nimport withAuthNavigate from \"../../hoc/withAuthNavigate\"\r\nimport {compose} from \"redux\"\r\nimport {getIsProfileFetching, getProfile, getProfileStatus} from \"../../redux/selectors/profile-selectors\"\r\nimport {getUserId} from \"../../redux/selectors/auth-selectors\"\r\n\r\nclass ProfileContainer extends Component {\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n        }\r\n\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId ) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isProfileFetching\r\n                    ?\r\n                    <Preloader/>\r\n                    :\r\n                    <Profile\r\n                        profile={this.props.profile}\r\n                        status={this.props.status}\r\n                        updateStatus={this.props.updateStatus}\r\n                        isOwner={!this.props.router.params.userId}\r\n                        savePhoto={this.props.savePhoto}\r\n                        saveProfile={this.props.saveProfile}/>}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isProfileFetching: getIsProfileFetching(state),\r\n        status: getProfileStatus(state),\r\n        authorizedUserId: getUserId(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthNavigate,\r\n    connect(mapStateToProps, {\r\n        getUserProfile,\r\n        getStatus,\r\n        updateStatus,\r\n        savePhoto,\r\n        saveProfile\r\n    }),\r\n    withRouter\r\n)(ProfileContainer)","import {Component} from \"react\"\r\nimport {Navigate} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\"\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport function withAuthNavigate(MyComponent) {\r\n     class AuthenticatedComponent extends Component {\r\n        render() {\r\n            if (!this.props.isAuth)\r\n                return <Navigate to=\"/login\"/>\r\n\r\n            return (\r\n                <MyComponent {...this.props} />\r\n            )\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps)(AuthenticatedComponent)\r\n}\r\n\r\nexport default withAuthNavigate\r\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","_jsx","children","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","onDoubleClick","ProfileData","_ref2","profile","isOwner","goToEditMode","_jsxs","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","_ref3","className","classes","ProfileDataFormReduxForm","reduxForm","form","_ref4","handleSubmit","error","onSubmit","formControlsClasses","formSummaryError","createField","Input","type","Textarea","_ref","savePhoto","saveProfile","_Fragment","src","alt","photos","large","userDefaultPhoto","target","files","length","initialValues","formData","then","ProfileStatus","message","likeCount","maxLength20","maxLength","NewPostForm","Field","name","component","validate","required","posts","addPost","postComponents","post","Post","id","likesCount","newPostText","getProfile","state","profilePage","getPosts","getIsProfileFetching","isProfileFetching","getProfileStatus","connect","MyPosts","ProfileInfo","MyPostsContainer","Component","location","useLocation","navigate","useNavigate","params","useParams","_objectSpread","router","ProfileContainer","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","userId","this","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Preloader","Profile","compose","withAuthNavigate","getUserId","withRouter","mapStateToProps","isAuth","auth","MyComponent","AuthenticatedComponent","Navigate","to"],"sourceRoot":""}